service: name.nathanialmcconnell.www

frameworkVersion: ">=1.0.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, env:SLS_STAGE, 'dev'}
  region: ${opt:region, env:SLS_REGION, 'us-east-1'}
  profile: ${opt:aws-profile, env:AWS_PROFILE, env:AWS_DEFAULT_PROFILE, 'default'}
  stackName: ${self:provider.environment.siteBucketNameDashes}
  memorySize: 128
  timeout: 10
  logRetentionInDays: 14
  deploymentBucket:
    name: ${self:provider.environment.deploymentBucketName}
  environment:
    deploymentBucketName: name.nathanialmcconnell.deploys
    siteBucketName: name.nathanialmcconnell.www
    siteBucketNameDashes: name-nathanialmcconnell-www
    siteHostedZoneId: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.siteHostedZoneId}
    siteHostedZoneName: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.siteHostedZoneName}
    gitHubOwner: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.gitHubOwner}
    gitHubRepo: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.gitHubRepo}
    gitHubBranch: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.gitHubBranch}
    gitHubToken: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.gitHubToken}
    buildType: LINUX_CONTAINER
    buildComputeType: BUILD_GENERAL1_SMALL
    buildImage: aws/codebuild/nodejs:8.11.0
    algoliaAppId: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.algoliaAppId}
    algoliaSearchOnlyApiKey: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.algoliaSearchOnlyApiKey}
    algoliaAdminApiKey: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.algoliaAdminApiKey}
    algoliaIndexName: ${file(../config.${self:provider.region}.${self:provider.stage}.yml):default.algoliaIndexName}

resources:
  Resources:
    CodeBuildRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.environment.siteBucketName}.CodeBuildRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - codebuild.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: "/service-role/"
        Policies:
          - PolicyName: codebuild-service
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectVerion
                    - s3:GetBucketVersioning
                    - s3:PutObject
                  Resource:
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: PipelineBucket
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: PipelineBucket
                          - "/*"
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectVersion
                    - s3:GetBucketVersioning
                    - s3:PutObject
                    - s3:PutObjectAcl
                  Resource:
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: SiteBucket
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: SiteBucket
                          - "/*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - cloudfront:CreateInvalidation
                  Resource: "*"
    CodePipelineRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.environment.siteBucketName}.CodePipelineRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - codepipeline.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: "/service-role/"
        Policies:
          - PolicyName: codepipeline-service
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:getObjectVersion
                    - s3:GetBucketVersioning
                  Resource:
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: PipelineBucket
                    - Fn::Join:
                        - ""
                        - - "arn:aws:s3:::"
                          - Ref: PipelineBucket
                          - "/*"
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource:
                    - arn:aws:s3:::codepipeline*
                - Effect: Allow
                  Action:
                    - codebuild:BatchGetBuilds
                    - codebuild:StartBuild
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - s3:*
                    - cloudformation:*
                    - iam:PassRole
                  Resource: "*"
    SiteBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:provider.environment.siteBucketName}
        WebsiteConfiguration:
          IndexDocument: index.html
    PipelineBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        BucketName: ${self:provider.environment.siteBucketName}.pipeline
    CodeBuildDeploySite:
      Type: AWS::CodeBuild::Project
      DependsOn: CodeBuildRole
      Properties:
        Name: ${self:provider.environment.siteBucketNameDashes}-CodeBuildDeploySite
        Description: Deploy site to S3
        ServiceRole:
          Fn::GetAtt:
            - CodeBuildRole
            - Arn
        Artifacts:
          Type: CODEPIPELINE
        Environment:
          Type: ${self:provider.environment.buildType}
          ComputeType: ${self:provider.environment.buildComputeType}
          Image: ${self:provider.environment.buildImage}
          EnvironmentVariables:
            - Name: ALGOLIA_APP_ID
              Value: ${self:provider.environment.algoliaAppId}
            - Name: ALGOLIA_SEARCH_ONLY_API_KEY
              Value: ${self:provider.environment.algoliaSearchOnlyApiKey}
            - Name: ALGOLIA_ADMIN_API_KEY
              Value: ${self:provider.environment.algoliaAdminApiKey}
            - Name: ALGOLIA_INDEX_NAME
              Value: ${self:provider.environment.algoliaIndexName}
        Source:
          Type: CODEPIPELINE
          BuildSpec:
            Fn::Sub: |
              version: 0.2
              phases:
                pre_build:
                  commands:
                  - echo Installing source NPM dependencies...
                  - npm install
                  - echo Cleaning project...
                  - npm run clean
                build:
                  commands:
                  - echo Build started on `date`
                  - npm run build
                post_build:
                  commands:
                  - aws s3 sync --acl public-read public s3://${self:provider.environment.siteBucketName}/
                  - aws s3 cp --acl public-read --cache-control='max-age=0, no-cache, no-store, must-revalidate' public/service-worker.js s3://${self:provider.environment.siteBucketName}/
                  - aws s3 cp --acl public-read --cache-control='max-age=0, no-cache, no-store, must-revalidate' public/index.html s3://${self:provider.environment.siteBucketName}/
              artifacts:
                files:
                - "**/*"
                base-directory: public
        TimeoutInMinutes: 10
    Pipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        Name: ${self:provider.environment.siteBucketName}.Pipeline
        RoleArn:
          Fn::GetAtt:
            - CodePipelineRole
            - Arn
        Stages:
          - Name: Source
            Actions:
              - InputArtifacts: []
                Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: ThirdParty
                  Version: "1"
                  Provider: GitHub
                OutputArtifacts:
                  - Name: SourceArtifacts
                Configuration:
                  Owner: ${self:provider.environment.gitHubOwner}
                  Repo: ${self:provider.environment.gitHubRepo}
                  Branch: ${self:provider.environment.gitHubBranch}
                  OAuthToken: ${self:provider.environment.gitHubToken}
                RunOrder: 1
          - Name: Deploy
            Actions:
              - Name: Artifact
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                InputArtifacts:
                  - Name: SourceArtifacts
                OutputArtifacts:
                  - Name: DeploymentArtifacts
                Configuration:
                  ProjectName:
                    Ref: CodeBuildDeploySite
                RunOrder: 1
        ArtifactStore:
          Type: S3
          Location:
            Ref: PipelineBucket
    Distribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Enabled: true
          DefaultRootObject: index.html
          Origins:
            - DomainName:
                Fn::GetAtt:
                  - SiteBucket
                  - DomainName
              Id: ${self:provider.environment.siteBucketName}
              S3OriginConfig:
                OriginAccessIdentity: ""
          Aliases:
            - Fn::GetAtt:
                - SiteBucket
                - DomainName
          HttpVersion: http2
          IPV6Enabled: true
          DefaultCacheBehavior:
            MinTTL: 86400
            MaxTTL: 31536000
            ForwardedValues:
              QueryString: true
            TargetOriginId: ${self:provider.environment.siteBucketName}
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            SslSupportMethod: sni-only
            AcmCertificateArn: arn:aws:acm:us-east-1:096188391785:certificate/2ab36cf4-10d7-4a14-bb81-79b6555df0f8
  Outputs:
    PipelineUrl:
      Value:
        Fn::Join:
          - ""
          - - "https://console.aws.amazon.com/codepipeline/home?region=${self:provider.region}#/view/"
            - Ref: Pipeline
      Description: CodePipeline URL
    SiteUrl:
      Value:
        Fn::GetAtt:
          - SiteBucket
          - WebsiteURL
      Description: S3 Website URL
